{"ast":null,"code":"var _jsxFileName = \"/Users/robineriksson/dev/react-typescript/src/features/profilePage/ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport ProfileCard from './ProfileCard';\nimport { fetchProfiles, clearProfiles } from './redux/fetchProfiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = ({}) => {\n  _s();\n  const dispatch = useAppDispatch();\n  const [fetchAmountOfProfiles, setFetchAmountOfProfiles] = useState(10);\n  useEffect(() => {\n    dispatch(fetchProfiles(10));\n  }, []);\n  const {\n    profiles\n  } = useAppSelector(state => state.profile);\n  const onClickFetchAmount = amount => {\n    setFetchAmountOfProfiles(amount);\n    dispatch(clearProfiles());\n    dispatch(fetchProfiles(amount));\n  };\n  const onClickFetchMore = () => {\n    dispatch(fetchProfiles(fetchAmountOfProfiles));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetch amount of profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickFetchAmount(10),\n          children: \"Fetch 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickFetchAmount(30),\n          children: \"Fetch 30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickFetchAmount(50),\n          children: \"Fetch 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickFetchAmount(100),\n          children: \"Fetch 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secret Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), profiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: profiles === null || profiles === void 0 ? void 0 : profiles.map((profile, index) => /*#__PURE__*/_jsxDEV(ProfileCard, {\n          profile: profile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            onClickFetchMore();\n          },\n          children: `Load ${fetchAmountOfProfiles} more profiles`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"V6Lv2BfkHElQhBM0C6LsxSOxvfg=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useAppSelector","useAppDispatch","ProfileCard","fetchProfiles","clearProfiles","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","dispatch","fetchAmountOfProfiles","setFetchAmountOfProfiles","profiles","state","profile","onClickFetchAmount","amount","onClickFetchMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","index","_c","$RefreshReg$"],"sources":["/Users/robineriksson/dev/react-typescript/src/features/profilePage/ProfilePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport ProfileCard from './ProfileCard'\nimport { fetchProfiles, clearProfiles } from './redux/fetchProfiles'\n\n\nconst ProfilePage = ({ }) => {\n    const dispatch = useAppDispatch()\n    const [fetchAmountOfProfiles, setFetchAmountOfProfiles] = useState(10);\n\n    useEffect(() => {\n        dispatch(fetchProfiles(10))\n    }, []);\n    const { profiles } = useAppSelector(state => state.profile);\n\n    const onClickFetchAmount = (amount: number) => {\n        setFetchAmountOfProfiles(amount)\n        dispatch(clearProfiles())\n        dispatch(fetchProfiles(amount))\n    }\n\n    const onClickFetchMore = () => {\n        dispatch(fetchProfiles(fetchAmountOfProfiles))\n    }\n\n    return (\n        <div className=\"profile-page\">\n            <div className=\"top-wrapper\">\n                <div>Fetch amount of profiles</div>\n                <div className=\"button-wrapper\">\n                    <button onClick={() => onClickFetchAmount(10)}>Fetch 10</button>\n                    <button onClick={() => onClickFetchAmount(30)}>Fetch 30</button>\n                    <button onClick={() => onClickFetchAmount(50)}>Fetch 50</button>\n                    <button onClick={() => onClickFetchAmount(100)}>Fetch 100</button>\n                </div>\n            </div>\n            <h1>Secret Profiles</h1>\n            {profiles.length === 0 ? <div>No Results</div>\n                :\n                <>\n                    <div className=\"wrapper\">\n                        {\n                            profiles?.map((profile, index) => (\n                                <ProfileCard profile={profile} key={index} />\n                            ))}\n                    </div>\n                    <div className=\"bottom-wrapper\">\n                        <button onClick={() => { onClickFetchMore() }}>{`Load ${fetchAmountOfProfiles} more profiles`}</button>\n                    </div>\n                </>\n            }\n        </div>\n    );\n};\nexport default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}